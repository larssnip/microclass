## Use the R_HOME indirection to support installations of multiple R version
CXX_STD = CXX11
PKG_CXXFLAGS += -DRCPP_PARALLEL_USE_TBB=1

PKG_LIBS += $(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe" \
              -e "RcppParallel::RcppParallelLibs()")


#PKG_CXXFLAGS += -DRCPP_PARALLEL_USE_TBB=1
#PKG_CXXFLAGS += -Ilibsrc $(SHLIB_OPENMP_CXXFLAGS) '$(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe" -e "RcppProgress:::CxxFlags()"')

#PKG_LIBS += $(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe" \
#              -e "RcppParallel::RcppParallelLibs()")
#PKG_LIBS += $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CXXFLAGS)

#CXX_STD = CXX11





## PKG_LIBS += '$(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe" -e "RcppProgress:::CxxFlags()")'

## PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"`

## As an alternative, one can also add this code in a file 'configure'
##
##    PKG_LIBS=`${R_HOME}/bin/Rscript -e "Rcpp:::LdFlags()"`
##
##    sed -e "s|@PKG_LIBS@|${PKG_LIBS}|" \
##        src/Makevars.in > src/Makevars
##
## which together with the following file 'src/Makevars.in'
##
##    PKG_LIBS = @PKG_LIBS@
##
## can be used to create src/Makevars dynamically. This scheme is more
## powerful and can be expanded to also check for and link with other
## libraries.  It should be complemented by a file 'cleanup'
##
##    rm src/Makevars
##
## which removes the autogenerated file src/Makevars.
##
## Of course, autoconf can also be used to write configure files. This is
## done by a number of packages, but recommended only for more advanced users
## comfortable with autoconf and its related tools.

