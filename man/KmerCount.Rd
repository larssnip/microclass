% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KmerCount.R
\name{KmerCount}
\alias{KmerCount}
\title{K-mer counting}
\usage{
KmerCount(sequences, K = 1, col.names = FALSE, type = "nucleotide")
}
\arguments{
\item{sequences}{Vector of sequences (text).}

\item{K}{Word length (integer).}

\item{col.names}{Logical indicating if the words should be added as columns names.}

\item{type}{Character selecting type of K-mer: "nucleotide" (default), "nucleotide 3" (skip 3), 
"amino acid", "codon".}
}
\value{
A matrix with one row for each sequence in \code{sequences} and one column for 
each possible word of length\code{K}.
}
\description{
Counting overlapping words of length K in DNA/RNA sequences.
}
\details{
For each input sequence, the frequency of every word of length \code{K} is counted. 
Counting is done with overlap. The counting itself is done by a C++ function.

With \code{col.names = TRUE} the K-mers are added as column names, but this makes the
computations slower.

Counting of nucleotide K-mers can be restricted to the reading frame starting at the first nucleotide
by setting \code{type = "nucleotide 3"}, i.e. leading to a skip of 3 instead of 1 when moving 
along the sequence.
}
\examples{
# Nucleotides
KmerCount("ATGCCTGAACTGACCTGC", K = 2)
KmerCount("ATGCCTGAACTGACCTGC", K = 3, col.names = TRUE)

# Amino Acids
KmerCount("ATGCCTGAACTGACCTGC", K = 1, col.names = TRUE, type = "amino acid")

# Codons
length(KmerCount("ATGCCTGAACTGACCTGC", K = 3, col.names = TRUE, type = "codon"))
# 64^3 = 262144 for word length 3

}
\seealso{
\code{\link{multinomTrain}}, \code{\link{multinomClassify}}.
}
\author{
Kristian Hovde Liland and Lars Snipen.
}
